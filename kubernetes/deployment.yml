apiVersion: v1
kind: Namespace
metadata:
  name: nginx
  labels:
    Environment: "Development"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: nginx
spec:
  replicas: 1
  strategy:
    #type: Recreate
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2        # how many pods we can add at a time
      maxUnavailable: 0  # maxUnavailable define how many pods can be unavailable during the rolling update
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - image: nanih98/nginx:1.19.9-alpine
        name: nginx
        imagePullPolicy: Always
        # readinessProb:
        #   httpGet:
        #     path: /healthz/
        #     port: 80
        #   initialDelaySeconds: 5
        #   timeoutSeconds: 1
        #   periodSeconds: 15
        # livenessProbe:
        #   httpGet:
        #     path: /healthz/
        #     port: 80
        #   initialDelaySeconds: 15
        #   timeoutSeconds: 1
        #   periodSeconds: 15
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: nginx
spec:
  selector:
    app: nginx
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-nginx
  namespace: nginx
  labels:
    app: nginx
spec:
  rules:
  - host: "nginx.example.com"
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: nginx
            port:
              number: 8080e
